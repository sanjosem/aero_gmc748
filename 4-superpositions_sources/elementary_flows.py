import numpy as np

class Source:
    """
    Contains information related to a source/sink.
    """
    def __init__(self, strength, xc, yc):
        """
        Sets the location and strength of the singularity.
        
        Parameters
        ----------
        strength: float
            Strength of the source/sink.
        xc: float
            x-coordinate of the source/sink.
        yc: float
            y-coordinate of the source/sink.
        """
        self.strength = strength
        self.xc, self.yc = xc, yc

    def velocity(self, X, Y):
        """
        Computes the velocity field generated by the source/sink.
        
        Parameters
        ----------
        X: 2D Numpy array of floats
            x-coordinate of the mesh points.
        Y: 2D Numpy array of floats
            y-coordinate of the mesh points.
        """
        self.u = (self.strength / (2 * np.pi) *
                  (X - self.xc) / ((X - self.xc)**2 + (Y - self.yc)**2))
        self.v = (self.strength / (2 * np.pi) *
                  (Y - self.yc) / ((X - self.xc)**2 + (Y - self.yc)**2))

    def stream_function(self, X, Y):
        """
        Computes the stream-function generated by the source/sink.
        
        Parameters
        ----------
        X: 2D Numpy array of floats
            x-coordinate of the mesh points.
        Y: 2D Numpy array of floats
            y-coordinate of the mesh points.
        """
        self.psi = (self.strength / (2 * np.pi) *
                    np.arctan2((Y - self.yc), (X - self.xc)))


class Uniform:
    """
    Contains information related to a uniform flow
    """
    def __init__(self, Vinf):
        """
        Sets the velocity at infinity. The flow is assumed to be parallel
        to the axis (Ox)
        
        Parameters
        ----------
        Vinf: float
            Velocity magnitude of the uniform flow
        """
        self.Vinf = Vinf
    
    def velocity(self, X, Y):
        """
        Computes the velocity field generated by the uniform flow
        
        Parameters
        ----------
        X: 2D Numpy array of floats
            x-coordinate of the mesh points.
        Y: 2D Numpy array of floats
            y-coordinate of the mesh points.
        """
        self.u = self.Vinf * np.ones_like(X)
        self.v = np.zeros_like(X)

    def stream_function(self, X, Y):
        """
        Computes the stream-function generated by the source/sink.
        
        Parameters
        ----------
        X: 2D Numpy array of floats
            x-coordinate of the mesh points.
        Y: 2D Numpy array of floats
            y-coordinate of the mesh points.
        """
        self.psi = self.Vinf * Y
